<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s='clr-namespace:System;assembly=mscorlib' 
    xmlns:l='clr-namespace:UVOutliner'
    xmlns:lib='clr-namespace:UVOutliner.Lib'
    xmlns:dd="clr-namespace:DragDropListBox">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="StyleResources/MyEditStyle.xaml" />
        <ResourceDictionary Source="StyleResources/NotesStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="SelectedItemBorder" Color="#7F9DB9"></SolidColorBrush>

    <l:LevelStyleSelectionToBackgroundConverter x:Key="LevelStyleSelectionToBackgroundConverter" />
    <l:FontItemTemplateSelector x:Key="FontItemTemplateSelector" />
    
    <Style TargetType="Hyperlink">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    
    <DataTemplate x:Key="FontItemWithPreview">
        <TextBlock VerticalAlignment="Center" Width="160" Text="{Binding}" FontFamily="{Binding}"/>
    </DataTemplate>
    
    <DataTemplate x:Key="FontItemWithoutPreview">
        <TextBlock VerticalAlignment="Center" Width="160" Text="{Binding}"/>
    </DataTemplate>
    
    <Style x:Key="HeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <DataTemplate x:Key="CellTemplate_Name_Collapsed">
        
    </DataTemplate>
    
    <DataTemplate x:Key="CellTemplate_Name">
        <DataTemplate.Resources>
            <Style TargetType="lib:NoteContentControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <lib:NoteContentPresenter 
                                    Content="{TemplateBinding ContentControl.Content}" 
                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Focusable" Value="False"/>
            </Style>
        </DataTemplate.Resources>
        <lib:NoteContentControl x:Name="PART_ContentControl" Content="{Binding}" ContentTemplate="{StaticResource CellTemplate_Name_WoNote}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding HasInlineNote}" Value="True">
                <Setter Property="ContentTemplate" TargetName="PART_ContentControl" 
                    Value="{StaticResource CellTemplate_Name_InlineNote}" />                
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <GridViewColumnCollection x:Key="gvcc">
        <!-- Все колонки настраиваются из кода, в зависимости от настроек, -->
        <!-- <GridViewColumn Header="Name" CellTemplate="{StaticResource CellTemplate_Name}" /> -->
    </GridViewColumnCollection>

    <HierarchicalDataTemplate DataType = "{x:Type l:OutlinerNote}"
                              ItemsSource = "{Binding Path=SubNotes}">
    </HierarchicalDataTemplate>

    <Style TargetType="{x:Type l:TreeListViewItem}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding LevelSelected}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>                            
                            <ColorAnimation
                                            Storyboard.TargetProperty="Background.Color"
                                            From="Transparent"
                                            To="#90CCCCCC" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>                    
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                            Storyboard.TargetProperty="Background.Color"
                                            From="#90CCCCCC"
                                            To="Transparent" Duration="0" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>            
            <DataTrigger Binding="{Binding DragOverNote}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" To="10" Storyboard.TargetProperty="TopDragMargin"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="TopDragMargin"/>
                            <!--<ColorAnimation
                                            Storyboard.TargetProperty="Background.Color"
                                            From="#90CCCCCC"
                                            To="Transparent" Duration="0" />-->
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>            
            </DataTrigger>            
        </Style.Triggers>
        
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        
            <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:TreeListViewItem}">
                    <StackPanel SnapsToDevicePixels="True">
                        <Border Name="TopMargin" Height="{TemplateBinding TopDragMargin}"
                                Background="#20000000" SnapsToDevicePixels="True"></Border>
                        <Border Name="LinesBetweenRows" BorderThickness="0" BorderBrush="{Binding Document.LinesBetweenRowsBrush}" SnapsToDevicePixels="True">
                            <Grid SnapsToDevicePixels="True">
                                 <Border Margin="0,0,0,0" Background="{Binding Background}" SnapsToDevicePixels="True"></Border>                              
                            <Border Name="Bd"
                          SnapsToDevicePixels="True" 
                          BorderBrush="{TemplateBinding Background}"
                          Background="{TemplateBinding Background}"
                          BorderThickness="1" CornerRadius="3"                           
                          >
                                <Border.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Apply level style" Command="{x:Static l:OutlinerCommands.ApplyLevelStyle}"/>
                                        <Separator />
                                        <MenuItem Header="Move row up" InputGestureText="Ctrl+Up" Command="{x:Static l:OutlinerCommands.MoveRowUp}"/>
                                        <MenuItem Header="Move row down" InputGestureText="Ctrl+Down" Command="{x:Static l:OutlinerCommands.MoveRowDown}"/>
                                        <MenuItem Header="Increase indentation" InputGestureText="Tab" Command="{x:Static l:OutlinerCommands.IncIndent}"/>
                                        <MenuItem Header="Decrease indentation" InputGestureText="Shift+Tab" Command="{x:Static l:OutlinerCommands.DecIndent}"/>
                                        <Separator />
                                        <MenuItem Header="Edit current row" InputGestureText="F2" Command="{x:Static l:OutlinerCommands.FocusEditor}"/>
                                        <MenuItem Header="Insert after current row" InputGestureText="Enter" Command="{x:Static l:OutlinerCommands.InsertAfterCurrent}"/>
                                        <Separator />
                                        <MenuItem Header="Delete current row" InputGestureText="Del" Command="{x:Static l:OutlinerCommands.DeleteCurrentRow}"/>
                                    </ContextMenu>
                                </Border.ContextMenu>
                            </Border>
                                <Grid SnapsToDevicePixels="True" Margin="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <GridViewRowPresenter Grid.Row="0" Name="PART_Header"
                                      Content="{TemplateBinding Header}" 
                                      Columns="{StaticResource gvcc}" />
                                    <!-- <TextBox Grid.Row="1" FontSize="10" Foreground="Gray">Inline text</TextBox> -->
                                </Grid>

                            </Grid>
                        </Border>
                        <ItemsPresenter SnapsToDevicePixels="True" x:Name="ItemsHost" />
                    </StackPanel>
                        
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Document.LinesBetweenRows}" Value="True">
                            <Setter TargetName="LinesBetweenRows" Property="BorderThickness" Value="0,0,0,1"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded"
                            Value="false">
                            <Setter TargetName="ItemsHost"
                                Property="Visibility"                        
                                Value="Collapsed" />
                            <Trigger.ExitActions>                                
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                          Storyboard.TargetName="ItemsHost" 
                                          Storyboard.TargetProperty="Opacity" 
                                          From="0.23" To="1"
                                          Duration="0:0:0.23" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsEditorFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            
                            <Setter TargetName="Bd"
                                Property="BorderBrush"
                                Value="{StaticResource SelectedItemBorder}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                             Value="false"/>
                                <Condition Property="Width"
                             Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                        Property="MinWidth"
                        Value="75"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                             Value="false"/>
                                <Condition Property="Height"
                             Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                        Property="MinHeight"
                        Value="19"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled"
                       Value="false">
                            <Setter Property="Foreground"
                        Value="{DynamicResource 
                          {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                                                
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:TreeListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:TreeListView}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                        <DockPanel Name="PART_DockPanel" Focusable="True" FocusVisualStyle="{x:Null}">
                            <GridViewHeaderRowPresenter Visibility="{TemplateBinding HeaderVisible}"  
                                            Columns="{StaticResource gvcc}"
                                            DockPanel.Dock="Top"/>
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ItemsPanelTemplate x:Key="FontEditComboBoxItemsPanel">
        <VirtualizingStackPanel Width="180"/>
    </ItemsPanelTemplate>

    <DataTemplate x:Uid="DataTemplate_1" x:Key="StylenameTemplate">
        <TextBlock Text="{Binding Name}" 
                   FontSize="{Binding InspectorFontSize}" 
                   FontFamily="{Binding InspectorFontFamily}"
                   Foreground="{Binding InspectorForeground}"
                   FontWeight="{Binding InspectorFontWeight}"
                   FontStyle="{Binding InspectorFontStyle}"
                   TextDecorations="{Binding InspectorTextDecorations}"/>

    </DataTemplate>



</ResourceDictionary>